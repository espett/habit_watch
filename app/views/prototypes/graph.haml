#graph
#debug
  = @dataset
%script{src: "http://d3js.org/d3.v3.min.js"}
%script{:type => "text/javascript"}
  // data that you want to plot, I've used separate arrays for x and y values
  var xdata = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24], ydata = [#{@dataset.join(",")}];

  // size and margins for the chart
  var margin = {top: 20, right: 15, bottom: 60, left: 60}, width = 960 - margin.left - margin.right, height = 500 - margin.top - margin.bottom;

  // x and y scales, I've used linear here but there are other options
  // the scales translate data values to pixel values for you
  var x = d3.scale.linear().domain([0, d3.max(xdata)]).range([ 0, width ]);        // the pixel range of the x-axis

  var y = d3.scale.linear().domain([0, d3.max(ydata)]).range([ height, 0 ]);

  // the chart object, includes all margins
  var chart = d3.select('#graph').append('svg:svg').attr('width', width + margin.right + margin.left).attr('height', height + margin.top + margin.bottom).attr('class', 'chart')

  // the main object where the chart and axis will be drawn
  var main = chart.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')').attr('width', width).attr('height', height).attr('class', 'main')

  // draw the x axis
  var xAxis = d3.svg.axis().scale(x).orient('bottom');

  main.append('g').attr('transform', 'translate(0,' + height + ')').attr('class', 'main axis date').call(xAxis);

  // draw the y axis
  var yAxis = d3.svg.axis().scale(y).orient('left');

  main.append('g').attr('transform', 'translate(0,0)').attr('class', 'main axis date').call(yAxis);

  // draw the graph object
  var g = main.append("svg:g");

  g.selectAll("scatter-dots").data(ydata).enter().append("svg:circle").attr("cy", function (d) { return y(d); } ).attr("cx", function (d,i) { return x(xdata[i]); } ).attr("r", 10).style("opacity", 0.6);